# -*- coding: utf-8 -*-
"""session 5 - github.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QFM4uGIw6M-qoigKLW57RMFESyxLsBOz
"""

import numpy as np

print("Integral Riemann\n")

def f(x):
    return 4 * (x**4) + 2 * (x**3) - 6*x

start = -3
end = 3
points = 30

# Define width
width = (end - start) / (points - 1)

# Divide into several parts
x = np.linspace(start, end, points)
y = f(x)

left = width * np.sum(y[ : points - 1])
right = width * np.sum(y[1 : ])

x_mid = 0.5 * (x[ : points - 1] + x[1 : ])
y_mid = f(x_mid)

mid = width * np.sum(y_mid)


print(f"Left Riemann: {left}\nRight Riemann: {right}\nMid Riemann: {mid}")